// Code generated by MockGen. DO NOT EDIT.
// Source: internal/server/validator_interface.go

// Package mock_server is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/sergeychur/avito_auto/internal/models"
	reflect "reflect"
)

// MockIValidator is a mock of IValidator interface
type MockIValidator struct {
	ctrl     *gomock.Controller
	recorder *MockIValidatorMockRecorder
}

// MockIValidatorMockRecorder is the mock recorder for MockIValidator
type MockIValidatorMockRecorder struct {
	mock *MockIValidator
}

// NewMockIValidator creates a new mock instance
func NewMockIValidator(ctrl *gomock.Controller) *MockIValidator {
	mock := &MockIValidator{ctrl: ctrl}
	mock.recorder = &MockIValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIValidator) EXPECT() *MockIValidatorMockRecorder {
	return m.recorder
}

// ValidateLink mocks base method
func (m *MockIValidator) ValidateLink(link models.Link) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateLink", link)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateLink indicates an expected call of ValidateLink
func (mr *MockIValidatorMockRecorder) ValidateLink(link interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateLink", reflect.TypeOf((*MockIValidator)(nil).ValidateLink), link)
}
